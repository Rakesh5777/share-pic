version: '3.8'
services:
  postgres:
    image: postgres
    container_name: slr_postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "postgres"
      UPLOADS_FOLDER: "/uploads"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    image: slr-server
    container_name: slr_server
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@slr_postgres:5432"
    volumes:
      - server_data:/uploads
    
  prisma-studio:
    container_name: prisma-studio
    image: timothyjmiller/prisma-studio:latest
    restart: unless-stopped
    environment:
      POSTGRES_URL: "postgresql://postgres:postgres@slr_postgres:5432"
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - 5555:5555
  
  web:
    image: slr-web
    container_name: slr_web
    ports:
      - "3000:80"
    depends_on:
      - server
    environment:
      SERVER_URL: "http://slr_server:8080"

  migrate:
    image: slr-server
    container_name: slr_migrate
    depends_on:
      postgres:
        condition: service_healthy
    entrypoint: ["npm", "run", "db:migrate"]
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@slr_postgres:5432"
    restart: "no"

volumes: 
  postgres_data:
  server_data:

